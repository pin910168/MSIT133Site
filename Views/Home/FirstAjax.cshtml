
@{
    ViewData["Title"] = "FirstAjax";
}

<h1>FirstAjax</h1>

<input type="text" placeholder="name" id="txtName" />
<input type="number" placeholder="age" id="txtAge" />
<input type="button" value="load" id="button1" />
<input type="button" value="cancel" id="button2" />
<div id="div1"></div>


@section Scripts{
    <script>
        const btn = document.querySelector("#button1");
        const divMessage = document.querySelector("#div1");
        const txtName = document.querySelector("#txtName");
        const txtAge = document.querySelector("#txtAge");
        const btnStop = document.querySelector('#button2');

        //步驟一  建立Ajax物件
        const xhr = new XMLHttpRequest();

        btn.addEventListener("click", () => {          

            //步驟二 對伺服器發出要求(Request)
            /*xhr.open("GET", "/api/index?name=YiPing郭&age=27");*///打開瀏覽器輸入網址
            xhr.open("GET", `/api/index?name=${txtName.value}&age=${txtAge.value}`);
            //xhr.timeout = 5000;
            xhr.send();//按下enter鍵

            //步驟三 接收伺服器回傳的結果(Response)
            //load 事件表示伺服器已經回傳結果到Client端了
            xhr.addEventListener("load", () => {
                //接收結果顯示在div中
                divMessage.innerHTML = xhr.responseText;
            })

            //Ajax開始
            xhr.addEventListener("loadstart", () => {
                console.log("loadstart");
                btn.value = "loading......";
                btn.setAttribute("disabled", "disabled");
            })

            //Ajax結束
            xhr.addEventListener("loadend", () => {
                console.log("loadend");
                btn.value = "load";
                btn.removeAttribute("disabled");
            })

            //timeout設定的時間到了，伺服器還沒回傳結果
            xhr.addEventListener("timeout", () => {
                divMessage.innerHTML = "伺服器忙碌中,請稍後";
            })

            //abort方法執行會觸發abort事件
            xhr.addEventListener("abort", () => {
                console.log("abort");
                divMessage.innerHTML = "已取消,請稍後";
            })
        })

        //使用者可以取消程式的執行
        btnStop.addEventListener('click', () => {
            xhr.abort();
        })

    </script>

}